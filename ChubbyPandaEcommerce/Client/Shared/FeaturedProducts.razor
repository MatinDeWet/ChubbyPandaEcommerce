@inject IProductService _productService
@implements IDisposable 

<center>
    <h2>Top Products of the Day</h2>
</center>
@if (_productService.products == null ||_productService.products.Count == 0)
{
    <span>@_productService.Message</span>
}
else
{
<div class="container">
    @foreach (var product in _productService.products)
   {
       @if (product.Featured)
      {
          <div class="featured-product">
              <div>
                    <a href="product/@product.Id">
                        <img src="@product.ImageUrl"/>
                    </a>
              </div>
              <h4>
                  <a href="product/@product.Id">@product.Title</a>
              </h4>
              @if (product.Variants != null && product.Variants.Count > 0)
             {
                 <h5 class="price">
                     R @product.Variants[0].Price
                 </h5>
             }
          </div>
      }
   }
</div>    
}


@code {
    protected override void OnInitialized()
    {
        _productService.ProductsChanged += StateHasChanged;
    }

    public void Dispose()
    {
        _productService.ProductsChanged -= StateHasChanged;
    }
}
